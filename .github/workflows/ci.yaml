name: CDK-CI/CD

on:
  # # Triggers the workflow on push or pull request events
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:
#     inputs:
#       confirm_deploy:
#         description: 'Enter "yes" to confirm deployment'
#         required: true    

env:
  AWS_ACCOUNT_ID: 716488812662
  AWS_REGION: us-east-2
  ECR_REPOSITORY: projectapp
#   IMAGE_TAG:  ${{ github.sha }}
  IMAGE_TAG: new
  ROLE_NAME: github-role

jobs:
  login-to-aws:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ env.ROLE_NAME }}
          role-session-name: GitHub-Action-Role
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1


  build-and-push-to-ecr:
    needs: login-to-aws
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{env.AWS_REGION}}.amazonaws.com
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build --build-arg NEXTAUTH_SECRET=${{secrets.NEXTAUTH_SECRET}}  \
          --build-arg NEXTAUTH_URL=${{secrets.NEXTAUTH_URL}} \
          --build-arg GOOGLE_CLIENT_ID=${{secrets.GOOGLE_CLIENT_ID}} \
          --build-arg GOOGLE_CLIENT_SECRET=${{secrets.GOOGLE_CLIENT_SECRET}} \
          --build-arg DATABASE_URL=${{secrets.DATABASE_URL}} \
          --build-arg OPENAI_API_KEY=${{secrets.OPENAI_API_KEY}} \
          --build-arg REDIS_URL=${{secrets.REDIS_URL}} \
          --build-arg REDIS_SECRET=${{secrets.REDIS_SECRET}} -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG . --load
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

